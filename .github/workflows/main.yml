name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          docker build -t wadeed/fyp_1:v1 React2/myapp
          docker build -t wadeed/fyp_1:v2 Backend
          docker build -t wadeed/fyp_1:v3 backend2

      - name: Push Docker images to Docker Hub
        run: |
          docker push wadeed/fyp_1:v1
          docker push wadeed/fyp_1:v2
          docker push wadeed/fyp_1:v3

      - name: Run frontend tests
        run: |
          echo "Frontend tests can be added here"
          # docker run --rm -it wadeed/fyp_1:v1 npm test -- --coverage

      - name: Run backend tests
        run: |
          echo "Backend tests can be added here"
          # docker run --rm -it wadeed/fyp_1:v2 pytest --rootdir=/app/backend

      - name: Run PHP backend tests
        run: |
          echo "PHP tests can be added here"
          # docker run --rm -it wadeed/fyp_1:v3 vendor/bin/phpunit

  cd:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images from Docker Hub
        run: |
          docker pull wadeed/fyp_1:v1
          docker pull wadeed/fyp_1:v2
          docker pull wadeed/fyp_1:v3

      - name: Scan Docker images with Trivy
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image wadeed/fyp_1:v1
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image wadeed/fyp_1:v2
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image wadeed/fyp_1:v3

      - name: Start Minikube
        run: |
          minikube start --driver=docker

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Deploy images to Kubernetes
        run: |
          kubectl delete deployment myapp-v1 --ignore-not-found
          kubectl delete deployment myapp-v2 --ignore-not-found
          kubectl delete deployment myapp-v3 --ignore-not-found

          kubectl create deployment myapp-v1 --image=wadeed/fyp_1:v1
          kubectl expose deployment myapp-v1 --type=NodePort --port=8080

          kubectl create deployment myapp-v2 --image=wadeed/fyp_1:v2
          kubectl expose deployment myapp-v2 --type=NodePort --port=8080

          kubectl create deployment myapp-v3 --image=wadeed/fyp_1:v3
          kubectl expose deployment myapp-v3 --type=NodePort --port=8080

          kubectl get deployments

      - name: Install Docker Compose plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Deploy MySQL container using Docker Compose
        run: |
          docker compose up -d
